name: Eval Retrieval Quality
on:
  pull_request:
    paths:
      - 'src/app/**'
      - 'src/config.py'
      - 'src/index/**'
      - 'tests/eval/**'

jobs:
  eval:
    if: ${{ vars.EVAL_BASE_URL != '' }}
    runs-on: ubuntu-latest
    env:
      EVAL_BASE_URL: ${{ vars.EVAL_BASE_URL }}
      API_KEY: ${{ secrets.EVAL_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install eval dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Warmup check
        run: |
          set -e
          echo "Checking $EVAL_BASE_URL/health"
          curl -sf "$EVAL_BASE_URL/health" > /dev/null

      - name: Run eval
        run: |
          python tests/eval/run_eval.py | tee eval-result.json

      - name: Guardrail - check eval threshold
        env:
          EVAL_MIN_RECALL: ${{ vars.EVAL_MIN_RECALL }}
        run: |
          python - << 'PY'
          import json, os, sys
          thr = os.getenv('EVAL_MIN_RECALL')
          if not thr:
              print('EVAL_MIN_RECALL not set; skipping guardrail')
              sys.exit(0)
          thr = float(thr)
          with open('eval-result.json','r') as f:
              data = json.load(f)
          # support both keys if present
          avg = data.get('avg_recall@k') or data.get('avg_recall')
          if avg is None:
              print('avg_recall not found in eval-result.json; skipping')
              sys.exit(0)
          print(f'avg_recall={avg}, threshold={thr}')
          if float(avg) < thr:
              print('Eval failed: recall below threshold')
              sys.exit(1)
          PY

      - name: Upload eval artifact
        uses: actions/upload-artifact@v4
        with:
          name: eval-result
          path: eval-result.json
